{
  "kind": "ConfigMapList",
  "apiVersion": "v1",
  "metadata": {
    "resourceVersion": "14895"
  },
  "items": [
    {
      "metadata": {
        "name": "hostnetwork-pod",
        "namespace": "semgr8ns",
        "uid": "b33f7a45-a78f-46b8-94f2-e34638e8796b",
        "resourceVersion": "14829",
        "creationTimestamp": "2023-04-21T14:28:15Z",
        "labels": {
          "app.kubernetes.io/instance": "semgr8s",
          "app.kubernetes.io/managed-by": "Helm",
          "app.kubernetes.io/name": "semgr8s",
          "app.kubernetes.io/version": "0.1.0",
          "helm.sh/chart": "semgr8s-0.1.0",
          "semgr8s/rule": "true"
        },
        "annotations": {
          "meta.helm.sh/release-name": "semgr8s",
          "meta.helm.sh/release-namespace": "semgr8ns"
        },
        "managedFields": [
          {
            "manager": "helm",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2023-04-21T14:28:15Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:data": {
                ".": {},
                "f:hostnetwork-pod.yaml": {}
              },
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:meta.helm.sh/release-name": {},
                  "f:meta.helm.sh/release-namespace": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/instance": {},
                  "f:app.kubernetes.io/managed-by": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/version": {},
                  "f:helm.sh/chart": {},
                  "f:semgr8s/rule": {}
                }
              }
            }
          }
        ]
      },
      "data": {
        "hostnetwork-pod.yaml": "rules:\n- id: hostnetwork-pod\n  patterns:\n  - pattern-inside: |\n      spec:\n        ...\n  - pattern: |\n      hostNetwork: true\n  message: \u003e-\n    Pod may use the node network namespace. This gives the pod access to the\n    loopback device, services listening on localhost, and could be used to\n    snoop on network activity of other pods on the same node. Remove the\n    'hostNetwork' key to disable this functionality.\n  metadata:\n    cwe:\n    - 'CWE-406: Insufficient Control of Network Message Volume (Network Amplification)'\n    references:\n    - https://kubernetes.io/docs/concepts/policy/pod-security-policy/#host-namespaces\n    category: security\n    technology:\n    - kubernetes\n    subcategory:\n    - audit\n    likelihood: LOW\n    impact: MEDIUM\n    confidence: LOW\n  languages: [yaml]\n  severity: WARNING\n"
      }
    },
    {
      "metadata": {
        "name": "privileged-container",
        "namespace": "semgr8ns",
        "uid": "7fadd471-d41d-452e-b327-d5fd48bc8298",
        "resourceVersion": "14828",
        "creationTimestamp": "2023-04-21T14:28:15Z",
        "labels": {
          "app.kubernetes.io/instance": "semgr8s",
          "app.kubernetes.io/managed-by": "Helm",
          "app.kubernetes.io/name": "semgr8s",
          "app.kubernetes.io/version": "0.1.0",
          "helm.sh/chart": "semgr8s-0.1.0",
          "semgr8s/rule": "true"
        },
        "annotations": {
          "meta.helm.sh/release-name": "semgr8s",
          "meta.helm.sh/release-namespace": "semgr8ns"
        },
        "managedFields": [
          {
            "manager": "helm",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2023-04-21T14:28:15Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:data": {
                ".": {},
                "f:privileged-container.yaml": {}
              },
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:meta.helm.sh/release-name": {},
                  "f:meta.helm.sh/release-namespace": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/instance": {},
                  "f:app.kubernetes.io/managed-by": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/version": {},
                  "f:helm.sh/chart": {},
                  "f:semgr8s/rule": {}
                }
              }
            }
          }
        ]
      },
      "data": {
        "privileged-container.yaml": "rules:\n- id: privileged-container\n  pattern-either:\n  - patterns:\n    - pattern-inside: |\n        containers:\n          ...\n    - pattern: |\n        image: ...\n        ...\n        securityContext:\n          ...\n          privileged: true\n  - patterns:\n    - pattern-inside: |\n        spec:\n          ...\n    - pattern-not-inside: |\n        image: ...\n        ...\n    - pattern: |\n        privileged: true\n  message: \u003e-\n    Container or pod is running in privileged mode. This grants the\n    container the equivalent of root capabilities on the host machine. This\n    can lead to container escapes, privilege escalation, and other security\n    concerns. Remove the 'privileged' key to disable this capability.\n  metadata:\n    cwe:\n    - 'CWE-250: Execution with Unnecessary Privileges'\n    references:\n    - https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privileged\n    - https://kubernetes.io/docs/tasks/configure-pod-container/security-context/\n    - https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html\n    category: security\n    technology:\n    - kubernetes\n    subcategory:\n    - vuln\n    likelihood: MEDIUM\n    impact: MEDIUM\n    confidence: MEDIUM\n  languages: [yaml]\n  severity: WARNING\n"
      }
    },
    {
      "metadata": {
        "name": "run-as-non-root",
        "namespace": "semgr8ns",
        "uid": "a1ab7634-1f7e-4026-a85d-93d3ffc50bda",
        "resourceVersion": "14830",
        "creationTimestamp": "2023-04-21T14:28:15Z",
        "labels": {
          "app.kubernetes.io/instance": "semgr8s",
          "app.kubernetes.io/managed-by": "Helm",
          "app.kubernetes.io/name": "semgr8s",
          "app.kubernetes.io/version": "0.1.0",
          "helm.sh/chart": "semgr8s-0.1.0",
          "semgr8s/rule": "true"
        },
        "annotations": {
          "meta.helm.sh/release-name": "semgr8s",
          "meta.helm.sh/release-namespace": "semgr8ns"
        },
        "managedFields": [
          {
            "manager": "helm",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2023-04-21T14:28:15Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:data": {
                ".": {},
                "f:run-as-non-root.yaml": {}
              },
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:meta.helm.sh/release-name": {},
                  "f:meta.helm.sh/release-namespace": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/instance": {},
                  "f:app.kubernetes.io/managed-by": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/version": {},
                  "f:helm.sh/chart": {},
                  "f:semgr8s/rule": {}
                }
              }
            }
          }
        ]
      },
      "data": {
        "run-as-non-root.yaml": "rules:\n- id: run-as-non-root\n  patterns:\n  # Capture spec\n  - pattern-inside: |\n      $SPEC:\n        ...\n        containers:\n          ...\n        ...\n  - metavariable-regex:\n      metavariable: $SPEC\n      regex: ^(spec)$\n  # No Pod Security Context\n  - pattern-not-inside: |\n      spec:\n        ...\n        securityContext:\n          ...\n        ...\n  # Containers defined\n  - pattern-inside: |\n      $SPEC:\n        ...\n        containers:\n          ...\n  # Security Context of all containers in this pod are missing runAsNonRoot\n  # So no decision is made to secure at container level in other containers\n  - pattern-not-inside: |\n      $SPEC:\n        ...\n        containers:\n          ...\n          - name: $NAME\n            image: ...\n            ...\n            securityContext:\n              ...\n              runAsNonRoot: $VALUE\n  - focus-metavariable: $SPEC\n  fix: |\n    $SPEC:\n      securityContext:\n        runAsNonRoot: true #\n  message: \u003e-\n    When running containers in Kubernetes, it's important to ensure that they \n    are properly secured to prevent privilege escalation attacks. \n    One potential vulnerability is when a container is allowed to run \n    applications as the root user, which could allow an attacker to gain \n    access to sensitive resources. To mitigate this risk, it's recommended to \n    add a `securityContext` to the container, with the parameter `runAsNonRoot` \n    set to `true`. This will ensure that the container runs as a non-root user, \n    limiting the damage that could be caused by any potential attacks. By \n    adding a `securityContext` to the container in your Kubernetes pod, you can \n    help to ensure that your containerized applications are more secure and \n    less vulnerable to privilege escalation attacks.\n  metadata:\n    references:\n    - https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/\n    - https://kubernetes.io/docs/concepts/policy/pod-security-policy/\n    - https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-2-set-a-user\n    category: security\n    cwe:\n    - 'CWE-250: Execution with Unnecessary Privileges'\n    owasp:\n    - A05:2021 - Security Misconfiguration\n    - A06:2017 - Security Misconfiguration\n    technology:\n    - kubernetes\n    subcategory:\n    - audit\n    likelihood: LOW\n    impact: LOW\n    confidence: LOW\n  languages:\n  - yaml\n  severity: INFO\n"
      }
    }
  ]
}