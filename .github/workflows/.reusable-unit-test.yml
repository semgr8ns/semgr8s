name: unit-test

permissions:
  checks: write
  pull-requests: write

on:
  workflow_call:
    inputs:
      skip:
        description: "Want to skip running certain jobs 'none', 'non-required', 'all'?"
        type: string
        default: "none"

jobs:
  pytest:
    name: unit tests
    runs-on: ubuntu-latest
    if: inputs.skip != 'all'
    steps:
      - name: Checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - name: Set up Docker buildx
        uses: docker/setup-buildx-action@d70bba72b1f3fd22344832f00baa16ece964efeb # v3.3.0
      - name: Build test image
        uses: docker/build-push-action@15560696de535e4014efeff63c48f16952e52dd1 # v6.2.0
        with:
          push: false
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          file: build/Dockerfile
          target: tester
          tags: semgr8s:tester
          provenance: false
          sbom: false
      - name: Test
        run: docker run --rm -t -v ${PWD}/tests/:/app/tests/ semgr8s:tester pytest --cov-report=term-missing:skip-covered --junitxml=tests/pytest.xml --cov=semgr8s tests/ | tee tests/pytest-coverage.txt
      - name: Coverage comment
        id: comment
        uses: MishaKav/pytest-coverage-comment@fa1c641d7e3fa1d98ed95d5f658ccd638b774628 # v1.1.52
        if: |
          github.event_name == 'pull_request' &&
          inputs.skip != 'non-required'
        with:
          pytest-coverage-path: tests/pytest-coverage.txt
          junitxml-path: tests/pytest.xml
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@db71d41eb79864e25ab0337e395c352e84523afe # v4.3.1
        if: success() || failure() # always run even if the previous step fails
        with:
          report_paths: 'tests/pytest.xml'
          fail_on_failure: true

  semgr8s-rules-validate:
    name: validate rules
    runs-on: ubuntu-latest
    if: |
      inputs.skip != 'all'
    steps:
      - name: Checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - name: Install python
        uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # v5.1.0
        with:
          python-version-file: '.python-version'
      - name: Install poetry
        uses: snok/install-poetry@93ada01c735cc8a383ce0ce2ae205a21c415379b # v1.3.4
        with:
          version: 1.8.3
          virtualenvs-create: false
          virtualenvs-in-project: false
          installer-parallel: true
      - name: Install dependencies
        run: |
          poetry install --only main
      - name: Validate pre-configured rules
        run: |
          semgrep scan --metrics=off --validate --config ./charts/semgr8s/rules/
      - name: Validate additional rules
        run: |
          semgrep scan --metrics=off --validate --config ./rules/

  semgr8s-rules-test:
    name: test rules
    runs-on: ubuntu-latest
    if: |
      inputs.skip != 'all'
    steps:
      - name: Checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - name: Install python
        uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # v5.1.0
        with:
          python-version-file: '.python-version'
      - name: Install poetry
        uses: snok/install-poetry@93ada01c735cc8a383ce0ce2ae205a21c415379b # v1.3.4
        with:
          version: 1.8.3
          virtualenvs-create: false
          virtualenvs-in-project: false
          installer-parallel: true
      - name: Install dependencies
        run: |
          poetry install --only main
      - name: Test rules
        run: semgrep scan --metrics=off --test --config ./rules/ ./rules/tests/

